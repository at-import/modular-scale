// path to local mixin
@import "modular-scale";

// $base-size: 1px 16px;
// $base-size: 1em 16em;
// $base-size: 16px, 44px;
// $base-size: 1em 2.75em; // 16px, 44px
// $base-size: 1rem 2.75rem; // 16px, 44px
// $base-size: 1em;
// $ratio: augmented_fourth();
// $ratio: golden_ratio() major_third();
// $round_pixels: false;
//
// @debug golden_ratio();
// @debug golden();
// @debug modular-scale-list(-5, 10);
// @debug modular-scale-list(-15, 30);
// @debug modular-scale(-10);
// @debug modular-scale(1);
// @debug modular-scale(10);

// $ratio: golden();
// $scale: modular-scale(1, 16px, $ratio);
// @include modular-scale-list(1, 3, 16px, $ratio);
// @debug $scale;

@debug ms-list(-10, 1, 16 44, 1.618);

// Defining the background color so we can see what is going on.
html {
  padding: 20px; }

body {
  background: #333333; }

.page {
  background: white;
  // You can define the attribute, multiple, base size, and ratio witin a mixin
  // Or just use functions
  padding: modular-scale(1, 14px, golden_ratio()) modular-scale(2, 14px, golden_ratio()); }

// You can also define your default values ahead of time
$base-size: 14px;
$ratio: golden_ratio();
// @debug modular-scale-list();

// Then just write the multiple
h1 {
  font-size: modular-scale(2);
  line-height: modular-scale(2); }

h2 {
  font-size: modular-scale(1);
  line-height: modular-scale(1); }

// There's also a shortcut name. ms() is equivalent to modular-scale()
p {
  font-size: ms(0);
  line-height: ms(1); }

// You can also 'lace' multiple ratios together by passing them in as a list (space-separated)
.lace {
  width: modular-scale(7, 14px, golden_ratio() fourth()); }

// And you can set the $ratio variable to a list
// to get a richer set of variables
$ratio: golden_ratio() fourth();
// @debug modular-scale-list();

h4 {
  font-size: ms(3); }

h5 {
  font-size: ms(2); }

h6 {
  font-size: ms(1); }

h3 {
  // You can multiply the calculated value, to arrive at a suitable line-height for example
  line-height: ms(6) * 1.2; }

// You can also set the $base-size variable to a list
// to interrelate two significant known sizes in your design
// note: the starting point of the scale will always be the *lowest* value in this list
$base-size: 14px 300px;

.foo {
  font-size: ms(1); }

.bar {
  font-size: ms(2); }

.baz {
  font-size: ms(-1); }
