// path to local mixin
@import "../../stylesheets/modular-scale";

// Defining the background color so we can see what is going on.
html {
  padding: 20px; }

body {
  background: #333333; }

.page {
  background: white;
  // You can define the attribute, multiple, base size, and ratio witin a mixin
  @include modular-scale(width, 9, 14px, $golden);
  @include modular-scale(height, 8, 14px, $golden);
  // Or just use functions
  padding: modular-scale(1, 14px, $golden) modular-scale(2, 14px, $golden); }

// You can also define your default values ahead of time
$base-size: 14px !default;
$ratio: $golden !default;

// Then just write the multiple
h1 {
  font-size: modular-scale(2);
  line-height: modular-scale(2); }

h2 {
  font-size: modular-scale(1);
  line-height: modular-scale(1); }

// Using multiple ratios
$ratio: $major-seventh $minor-seventh !default;

p {
  font-size: modular-scale(0);
  line-height: modular-scale(1); }

@include modular-scale-classes(6, font-size);

// You can also 'lace' multiple ratios together by passing them in as a list (space-separated)
.lace {
  width: ms(7, 14px, $golden $fourth); }

// And you can set the $ratio variable to a list
$ratio: $golden $fourth;

h4 {
  font-size: ms(3); }

h5 {
  font-size: ms(2); }

h6 {
  font-size: ms(1); }

h3 {
  // You can multiply the calculated value, to arrive at a suitable line-height for example
  line-height: ms(6) * 1.2; }
